<?php

namespace Sunahip\SolicitudesCitasBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DataCitasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DataCitasRepository extends EntityRepository
{
    /**
     * 
     * @param DateTime $date
     * @return Int Cant
     */
    public function ContCitaDay($date){
     $query = $this->createQueryBuilder('p')
            ->select('count(p.fechaSolicitud) as cant')
            ->where("p.fechaSolicitud like :date")
            ->setParameter('date',($date.'%'))
            ->getQuery();
            $resp=$query->getSingleResult();
        return $resp['cant'];
    }
   
    /**
     * 
     * @param DateTime $date
     * @return Int Cant
     */
    public function LastCitaDay($date){
     $query = $this->createQueryBuilder('p')
            ->where("p.fechaSolicitud like :date")
            ->orderBy('p.codsolicitud', "DESC") 
            ->setParameter('date',($date.'%'))
            ->getQuery();
            $resp=$query->getResult();          
        return !empty($resp)?$resp[0]->getCodsolicitud():"0-0";
    }
   /**
    * 
    * @param DateTime $Inidate
    * @param DateTime $maxDate
    * @return arrayResult
    */
    public function CountDateIn($Inidate,$maxDate){
     $query = $this->createQueryBuilder('p')
            ->select('p.fechaSolicitud, count(p.fechaSolicitud) as cant')
            ->where("p.fechaSolicitud between :inidate and :maxdate")
            ->groupBy("p.fechaSolicitud") 
            ->setParameter('inidate',($Inidate))
             ->setParameter('maxdate', $maxDate)
            ->getQuery();
           //die (var_dump($query->getResult() )) ;
            return $query->getResult();
        //return $resp;
    }
    
    public function findByUser($date, $user){
        $query = $this->createQueryBuilder('p')
                    ->select('count(p.id) as cant')
                    ->where("p.fechaSolicitud like :date")
                    ->setParameter('date',($date.'%'))
                    ->andWhere("p.usuario = :usuario")
                    ->setParameter("usuario", $user)
                    ->getQuery();
                    $resp=$query->getSingleResult();
        return $resp['cant'];
    }
}
