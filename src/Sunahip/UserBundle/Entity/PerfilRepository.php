<?php

namespace Sunahip\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FiscalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PerfilRepository extends EntityRepository
{
    /**
     * Busca $cant fiscales aletorios
     * @param  int $cant Cantidad de fiscales
     * @return [type]       [description]
     */
    public function findFiscal($cant, $gerente)
    {
        //Get the number of rows from your table
        /*$rows = $this->getEntityManager()->createQuery('SELECT COUNT(u) FROM UserBundle:SysPerfil u')->getSingleScalarResult();
        $array = array();
        while (count($array) < $cant) {
            $array[] = max(0, rand(1, $rows - 1));
            $array=array_unique($array);
        }*/
        $ids = $queryCityIds = $this->getEntityManager()->createQuery("
            SELECT p.idperfil FROM UserBundle:SysPerfil p
            JOIN p.user u
            WHERE u.roles LIKE  :role AND p.idperfil <> :gerente")
        ->setParameter('role', '%ROLE_FISCAL%')
        ->setParameter('gerente', $gerente->getId())
        ->getArrayResult();
        shuffle($ids);
        $array = array_slice($ids, 0, $cant);
        $array = array_map(function ($v) { return $v['idperfil'];}, $array);
        $q = $this->createQueryBuilder('u');
        return $q
            ->join('u.user', 'c')
            ->where('c.roles LIKE  :role')
            ->andWhere('u <> :gerente')
            ->andWhere($q->expr()->in('u', $array))
            ->setParameter('role', '%ROLE_FISCAL%')
            ->setParameter('gerente', $gerente)
            ->setMaxResults($cant)
            ->getQuery();
    }

    /**
     * Cantidad total de fiscales
     * @return int 
     */
    function cantFisc(){
        return (int)$this->getEntityManager()->createQuery('
            SELECT COUNT(p.idperfil) FROM UserBundle:SysPerfil p
            JOIN p.user u
            WHERE u.roles LIKE  :role')
        ->setParameter('role', '%ROLE_FISCAL%')
        ->getSingleScalarResult();
    }
}
